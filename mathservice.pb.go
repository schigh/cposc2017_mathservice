// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mathservice.proto

/*
Package mathservice is a generated protocol buffer package.

It is generated from these files:
	mathservice.proto

It has these top-level messages:
	AddRequest
	AddResponse
	AverageRequest
	AverageResponse
*/
package mathservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddRequest struct {
	Addend1 int64 `protobuf:"varint,1,opt,name=addend1" json:"addend1,omitempty"`
	Addend2 int64 `protobuf:"varint,2,opt,name=addend2" json:"addend2,omitempty"`
}

func (m *AddRequest) Reset()                    { *m = AddRequest{} }
func (m *AddRequest) String() string            { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()               {}
func (*AddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddRequest) GetAddend1() int64 {
	if m != nil {
		return m.Addend1
	}
	return 0
}

func (m *AddRequest) GetAddend2() int64 {
	if m != nil {
		return m.Addend2
	}
	return 0
}

type AddResponse struct {
	Sum int64 `protobuf:"varint,1,opt,name=sum" json:"sum,omitempty"`
}

func (m *AddResponse) Reset()                    { *m = AddResponse{} }
func (m *AddResponse) String() string            { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()               {}
func (*AddResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddResponse) GetSum() int64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

type AverageRequest struct {
	Numbers []int64 `protobuf:"varint,1,rep,packed,name=numbers" json:"numbers,omitempty"`
}

func (m *AverageRequest) Reset()                    { *m = AverageRequest{} }
func (m *AverageRequest) String() string            { return proto.CompactTextString(m) }
func (*AverageRequest) ProtoMessage()               {}
func (*AverageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AverageRequest) GetNumbers() []int64 {
	if m != nil {
		return m.Numbers
	}
	return nil
}

type AverageResponse struct {
	Average float64 `protobuf:"fixed64,1,opt,name=average" json:"average,omitempty"`
}

func (m *AverageResponse) Reset()                    { *m = AverageResponse{} }
func (m *AverageResponse) String() string            { return proto.CompactTextString(m) }
func (*AverageResponse) ProtoMessage()               {}
func (*AverageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AverageResponse) GetAverage() float64 {
	if m != nil {
		return m.Average
	}
	return 0
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "mathservice.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "mathservice.AddResponse")
	proto.RegisterType((*AverageRequest)(nil), "mathservice.AverageRequest")
	proto.RegisterType((*AverageResponse)(nil), "mathservice.AverageResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MathService service

type MathServiceClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	Average(ctx context.Context, in *AverageRequest, opts ...grpc.CallOption) (*AverageResponse, error)
}

type mathServiceClient struct {
	cc *grpc.ClientConn
}

func NewMathServiceClient(cc *grpc.ClientConn) MathServiceClient {
	return &mathServiceClient{cc}
}

func (c *mathServiceClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := grpc.Invoke(ctx, "/mathservice.MathService/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathServiceClient) Average(ctx context.Context, in *AverageRequest, opts ...grpc.CallOption) (*AverageResponse, error) {
	out := new(AverageResponse)
	err := grpc.Invoke(ctx, "/mathservice.MathService/Average", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MathService service

type MathServiceServer interface {
	Add(context.Context, *AddRequest) (*AddResponse, error)
	Average(context.Context, *AverageRequest) (*AverageResponse, error)
}

func RegisterMathServiceServer(s *grpc.Server, srv MathServiceServer) {
	s.RegisterService(&_MathService_serviceDesc, srv)
}

func _MathService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mathservice.MathService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServiceServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MathService_Average_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AverageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServiceServer).Average(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mathservice.MathService/Average",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServiceServer).Average(ctx, req.(*AverageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MathService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mathservice.MathService",
	HandlerType: (*MathServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _MathService_Add_Handler,
		},
		{
			MethodName: "Average",
			Handler:    _MathService_Average_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mathservice.proto",
}

func init() { proto.RegisterFile("mathservice.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0x4d, 0x2c, 0xc9,
	0x28, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0x72, 0xe0, 0xe2, 0x72, 0x4c, 0x49, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11,
	0x92, 0xe0, 0x62, 0x4f, 0x4c, 0x49, 0x49, 0xcd, 0x4b, 0x31, 0x94, 0x60, 0x54, 0x60, 0xd4, 0x60,
	0x0e, 0x82, 0x71, 0x11, 0x32, 0x46, 0x12, 0x4c, 0xc8, 0x32, 0x46, 0x4a, 0xf2, 0x5c, 0xdc, 0x60,
	0x13, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x04, 0xb8, 0x98, 0x8b, 0x4b, 0x73, 0xa1, 0xda,
	0x41, 0x4c, 0x25, 0x2d, 0x2e, 0x3e, 0xc7, 0xb2, 0xd4, 0xa2, 0xc4, 0xf4, 0x54, 0x24, 0x6b, 0xf2,
	0x4a, 0x73, 0x93, 0x52, 0x8b, 0x8a, 0x25, 0x18, 0x15, 0x98, 0x41, 0x86, 0x41, 0xb9, 0x4a, 0xda,
	0x5c, 0xfc, 0x70, 0xb5, 0x50, 0x03, 0x41, 0x36, 0x43, 0x84, 0xc0, 0x86, 0x32, 0x06, 0xc1, 0xb8,
	0x46, 0xbd, 0x8c, 0x5c, 0xdc, 0xbe, 0x89, 0x25, 0x19, 0xc1, 0x10, 0xbf, 0x08, 0x59, 0x70, 0x31,
	0x3b, 0xa6, 0xa4, 0x08, 0x89, 0xeb, 0x21, 0xfb, 0x19, 0xe1, 0x3b, 0x29, 0x09, 0x4c, 0x09, 0xa8,
	0x1d, 0x2e, 0x5c, 0xec, 0x50, 0x6b, 0x85, 0xa4, 0x51, 0x15, 0xa1, 0x38, 0x5c, 0x4a, 0x06, 0xbb,
	0x24, 0xc4, 0x94, 0x24, 0x36, 0x70, 0xf8, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x43, 0x4a,
	0xae, 0xe6, 0x74, 0x01, 0x00, 0x00,
}
